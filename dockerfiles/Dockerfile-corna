FROM rockylinux:9

# Print commands as they are executed
SHELL ["bash", "-xc"]

# Set runtime environment
ENV \
    # Don't check for new versions of Pip
    PIP_DISABLE_PIP_VERSION_CHECK=true

# Configure locale
ARG LOCALE=en_GB.utf8
# we need to install language packs as they're no longer a part of RHEL 8 and
# above by default.
RUN yum install -y langpacks-en glibc-all-langpacks && \
    yum --setopt override_install_langs=${LOCALE} \
        --setopt skip_missing_names_on_install=False \
        --save >/dev/null
ENV LANG=${LOCALE} \
    LC_ALL=${LOCALE}

# Create unprivileged user
ARG UID=1000
ARG GID=1000
RUN groupadd -g ${GID} corna-user && \
    useradd -u ${UID} -g ${GID} corna-user

# update yum
RUN yum -y update && yum clean all && \
    # We're seeing issues with installing postgresql-devel as it is dependant
    # on a package called perl-IPC-Run which is annoyingly not available in
    # either of the epel or extra rocky repos. On top of that, the base container
    # does not come with dnf/yum config-manager so we have to install it directly
    # here because our yum install step is what does the postgresql-devel install
    # more info:
    #   https://fluca1978.github.io/2024/02/08/PostgreSQL16DevPerlIPCRun.html
    yum --enablerepo=crb install -y perl-IPC-Run

# Install system dependencies
COPY yum-deps yum-repos ./
RUN grep -v ^# yum-repos | xargs -rt yum install -y && \
    grep -v ^# yum-deps | xargs -rt yum install -y && \
    yum clean all

# install pip for python3.12
RUN /usr/bin/python3.12 -m ensurepip && \
    /usr/bin/python3.12 -m pip install --upgrade pip

# Run as unprivileged user
USER corna-user

# Copy vault pwd.
#
# ok, so this is kind of fucked but it makes development so much faster. Docker
# compose secrects are so shit and dont work after you rebuild the container
# completely defeating the whole point of zero downtime container replacement.
# What about security, I hear you ask?
# Well firstly, copying over the pwd as a file does not leave any fragments in
# the container layers, so nothing comes up if you run `docker inspect`.
# Secondly, there are several layers of security, so if someone reaches the point
# that they can run `docker` commands on the container, we've either let them or
# we're already fucked.
#
# What are said layers?
# - Only root accounts can give docker permissions (we only have on root account)
#    even `cornauser` (on servers) is not root
# - corna user is password protected and is not ssh-able (you have to go via
#    root account)
# - the pwd is not on any severs, we only run built containers from our registry
#
# this is a temp solution till we grow up and use k8s like the cool kids as it
# has proper secrets management and can sidecar the pwd in at build time
COPY \
    --chown=corna-user:corna-user \
    --chmod=0400 \
    .vault-password \
    /run/secrets/vault_password

# After installing postgresql-devel, which is a requirement to build psycopg2
# from source, the path to pg_config location is not added to the file path.
# pg_config is a required executable to install psycopg2, so we need to manually
# pass the path as part of our pip install step. We set the argument here.
ARG PG_PATH=/usr/pgsql-13/bin/

# install requirements before copying over source to make rebuilds
# quicker in future i.e. source code moves faster than requirements
COPY --chown=corna-user:corna-user requirements.txt ./
RUN PATH=$PATH:${PG_PATH} /usr/bin/python3.12 -m pip install --user -r requirements.txt

# copy over source and set permissions
COPY --chown=corna-user:corna-user \
    corna /home/corna-user/workspace/corna

COPY --chown=corna-user:corna-user \
    tests /home/corna-user/workspace/tests

COPY --chown=corna-user:corna-user \
    frontend /home/corna-user/workspace/frontend

COPY --chown=corna-user:corna-user \
    themes /home/corna-user/workspace/themes

COPY --chown=corna-user:corna-user \
    .isort.cfg \
    .pylintrc \
    gunicorn_conf.py \
    gunicorn.logging.ini \
    Makefile \
    mypy.ini \
    pytest.ini \
    setup.cfg \
    /home/corna-user/workspace/

WORKDIR /home/corna-user/workspace
